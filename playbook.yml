---
- hosts: localhost
  become: true
  vars:
    username: ericovis
    atom_ver: 1.29.0
    docker_channel: edge
  tasks:
    - name: Ensure needed APT keys are present
      apt_key:
        url: "{{ item }}"
        state: present
      with_items:
        - https://download.docker.com/linux/ubuntu/gpg
        - https://deb.nodesource.com/gpgkey/nodesource.gpg.key

    - name: Ensure needed APT repositories are present
      apt_repository:
        repo: "{{ item }}"
        state: present
      with_items:
        - "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} {{ docker_channel }}"
        - "deb https://deb.nodesource.com/node_8.x {{ ansible_distribution_release }} main"
        - "deb-src https://deb.nodesource.com/node_8.x {{ ansible_distribution_release }} main"
        - "ppa:snwh/ppa"
    - name: Ensure apt cache is updated
      apt:
        update_cache: true
    - name: Ensure needed packages are installed
      apt:
        name: "{{ item }}"
        state: present
      with_items:
        - build-essential
        - git
        - python-dev
        - python3
        - python3-dev
        - python-pip
        - python3-pip
        - python3-dateutil
        - golang-go
        - nodejs
        - gcc
        - g++
        - curl
        - apt-transport-https
        - ca-certificates
        - software-properties-common
        - wget
        - gconf2
        - gconf-service
        - gimp
        - shotwell
        - inkscape
        - gnome-tweak-tool
        - chrome-gnome-shell
        - docker-ce
        - arc-theme
        - paper-icon-theme
    - name: Ensure that needed DEBs are installed
      apt:
        deb: "{{ item }}"
      with_items:
        - "https://github.com/atom/atom/releases/download/v{{ atom_ver }}/atom-amd64.deb"
        - "https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb"
    - name: "Add {{ username }} to the Docker group"
      user:
        name: "{{ username }}"
        groups: docker
        append: true
    - name: Ensure that Docker is enabled at startup and started
      service:
        name: docker
        state: started
        enabled: true
    - name: Ensure needed PIP packages are present
      pip:
        name: "{{ item }}"
        state: present
        executable: pip3
      with_items:
        - pip
        - pipenv
        - pycodestyle
        - awscli
        - awsebcli
    - name: Ensure needed NPM packages are present
      npm:
        name: "{{ item }}"
        state: present
        global: true
      with_items:
        - serverless
        - yaml-js
